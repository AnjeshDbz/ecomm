{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/seller.service\";\nexport class AuthGuard {\n  constructor(sellerService) {\n    this.sellerService = sellerService;\n  }\n  canActivate(route, state) {\n    return false;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.SellerService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"names":["AuthGuard","constructor","sellerService","canActivate","route","state","i0","ɵɵinject","i1","SellerService","factory","ɵfac","providedIn"],"sources":["F:\\Anjesh\\Learn\\angular\\ecomm\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  RouterStateSnapshot,\n  UrlTree,\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { SellerService } from \"./services/seller.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private sellerService: SellerService) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return false;\n  }\n}\n\n// export const authGuard: CanActivateFn = (route, state) => {\n//   return false;\n// };\n"],"mappings":";;AAaA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;EAAkB;EACnDC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAM1B,OAAO,KAAK;EACd;;AAXWL,SAAS,C;mBAATA,SAAS,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;AAAA;AAATT,SAAS,C;SAATA,SAAS;EAAAU,OAAA,EAATV,SAAS,CAAAW,IAAA;EAAAC,UAAA,EAFR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}